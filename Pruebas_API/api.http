### Mangas -------------------------------------------------------------------

### Usando el metodo GET sin Query String o Parametro de Ruta

GET http://localhost:3000/mangas

### Usando el metodo GET con la Query String ? Key=Value probando el parametro genre

GET http://localhost:3000/mangas?genre=2

### Usando el metodo GET con la Query String ? Key=Value probando el parametro title

GET http://localhost:3000/mangas?title=PRUEBA

### Usando el metodo GET con la Query String ? Key=Value probando el parametro title y genre al la vez

GET http://localhost:3000/mangas?genre=2&title=The

### Probando la Paginacion

GET http://localhost:3000/mangas?page=2&limit=3

### Usando el metodo GET con el parametro de ruta id

GET http://localhost:3000/mangas/2cff6aca-0a95-11f0-84f1-a8a15907d61fc

### Post a la api rest
### Es Importante que las API estan abiertas a recibir todo typo de parametros
##EN el Body pero que puedan filtrar solo lo que necesitan
### Es decir que le puedo poner parametros de mas pero la API simplemento los va
### a Ignorar
POST http://localhost:3000/mangas
Content-Type: application/json

{
    "title": "The Godfather",
    "desc": "Lo mas raro que hay aqui",
    "img": "http://A.jpg",
    "genre": [3,2]
}

### Usando el metod POST | Probando las validaciones de ZOD

POST http://localhost:3000/mangas
Content-Type: application/json

{
    "title": "Prueba POSt1",
    "desc": "Probando el metodo post de la API REST",
    "genre": ["1","2","7"]
}

### Usando el metod PATCH para hacer una actualizacion de datos parcial

PATCH  http://localhost:3000/mangas/2cff6aca-0a95-11f0-84f1-a8a15907d61
Content-Type:  application/json

{
    "title": "Patch Post 1"
}

### ANIMES -------------------------------------------------------------------

### Usando la nueva ruta de animes con el metodo GET

GET http://localhost:3000/animes

### Usando el atributo title del Metodo GET para buscar Animes por un titulo

GET http://localhost:3000/animes?title=One

### Probando los parametros de Ruta en la ruta animes

GET http://localhost:3000/animes?genre=2

### Usando el metodo GET con la Query String ? Key=Value probando el parametro title y genre al la vez

GET http://localhost:3000/animes?genre=2&title=SOLO

### Probando la paginacion en la ruta animes

GET http://localhost:3000/animes?page=2

### Usando el metodo GET con el parametro de ruta id

GET http://localhost:3000/animes/72d0fe32-0e86-11f0-80b3-a8a15907d61f

### Usando el metodo GET con el parametro de ruta id
### Con una UUID valida pero no existente en la Base de Datos

GET http://localhost:3000/animes/222ab2bd-0b17-4e4e-8037-194e6e53038b

### Probando el retorno del Metodo GET By Id cuando no hay
### generos ligados al anime

GET http://localhost:3000/animes/229786cc-0f92-11f0-a178-a8a15907d61f

### Usando el metodo POST pero con la propiedad img erronea
### Ya que no es una URL Valida

POST http://localhost:3000/animes
Content-Type: application/json

{
    "title": "Usando el Post",
    "desc": "Estoy usando el metodo POST para crear un recurso en mi api",
    "img": "/hola/prueba/url/esto/es/una/ulr?",
    "genres": ["Drama", "Sci-Fi"]
}

### En esta peticion da error el servidor
### Ya que en el atributo {img} no es una url permitida
### la url debe empezar por http:// o https://,
### No estoy seguro si la afirmacion de arriba es cierta
### Ya que no se que es lo que verifica zod como url

### NOTA | Encontre la validacion de url de ZOD
### Valores por defecto de ZOD
###const default_url_options = {
###  protocols: ['http', 'https', 'ftp'],
###  require_tld: true,
###  require_protocol: false,
###  require_host: true,
###  require_port: false,
###  require_valid_protocol: true,
###  allow_underscores: false,
###  allow_trailing_dot: false,
###  allow_protocol_relative_urls: false,
###  allow_fragments: true,
###  allow_query_components: true,
###  validate_length: true,
###  max_allowed_length: 2084,
###};
### URL: https://github.com/validatorjs/validator.js/blob/master/src/lib/isURL.js
### https://github.com/validatorjs/validator.js/tree/master/src/lib

### Usando el metodo POST (CREATE) en la ruta animes

POST http://localhost:3000/animes
Content-Type: application/json

{
    "title": "Usando el Post",
    "desc": "Estoy usando el metodo POST para crear un recurso en mi api",
    "img": "data:http://hola/sapa",
    "genres": ["Drama", "Sci-Fi"]
}

### Usanod el metodo PATCH en la ruta animes

PATCH  http://localhost:3000/animes/222ab2bd-0b17-4e4e-8037-194e6e53038b
Content-Type: application/json

{
    "title": "Usando el PATCH ",
    "img": "https://github.com/validatorjs/validator.js/blob/master/src/lib/isURL.js"
}

### Prueba Patch con generos

PATCH http://localhost:3000/animes/229786cc-0f92-11f0-a178-a8a15907d61f
Content-Type: application/json

{
    
    "genre": [1, 2, 7]
}

### Usando el metodo DELETE en la ruta animes

DELETE http://localhost:3000/animes/222ab2bd-0b17-4e4e-8037-194e6e53038b

### Generos -------------------------------------------------------------------

### Usando el nuevo recurso y routa de la API

GET http://localhost:3000/generos

### Search -------------------------------------------------------------------

### Probando la Nueva ruta /search

GET http://localhost:3000/search

### Usando el metodo getAll con el query String ? key=value title

GET http://localhost:3000/search?title=E

### Usando el metodo getAll con el Query String ? key=value genre

GET http://localhost:3000/search?genre=2

### Usando el metodo getAll con el Query String ? key=value page

GET http://localhost:3000/search?page=2

### Usando el metodo getAll con los query String ? key=value title&genre

GET http://localhost:3000/search?title=Pr&genre=1

### Usando el metodo getAll con los query String ? key=value title&genre&page
### Aqui estoy probando que pasa si solicito una pagina mayor
### al total de paginas es decir que si tengo 1 pagina disponible
### y le pido la pagina 2 que pasaria

GET http://localhost:3000/search?title=Pr&genre=1&page=2

### Probando la authenticacion 

POST http://localhost:3000/auth/login
Authorization: Basic dGVzdEBnbWFpbC5jb206dGVzdA==

###

GET http://localhost:3000/auth/prueba
# Asi se crea un header para la peticion | Cambiar el token para pruebas
Authorization: Bearer 24585ab792be75ccbce9a49e8e2364b59ee9aefd8d9f10433270bed92132defa